-- MySQL Script generated by MySQL Workbench
-- Tue Jul 18 09:27:58 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema proto_youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema proto_youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `proto_youtube` DEFAULT CHARACTER SET utf8 ;
USE `proto_youtube` ;

-- -----------------------------------------------------
-- Table `proto_youtube`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(32) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `username` VARCHAR(16) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `sex` ENUM('m', 'f') NULL,
  `country` VARCHAR(45) NOT NULL,
  `postal_code` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `proto_youtube`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`tag` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `proto_youtube`.`channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`channel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `description` TINYTEXT NULL,
  `creation_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_channel_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_channel_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`video` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` TINYTEXT NULL,
  `size` DECIMAL NOT NULL,
  `name_of_file` JSON NOT NULL,
  `video_length` INT NOT NULL,
  `thumbnail` BLOB NULL,
  `number_played` INT NOT NULL DEFAULT 0,
  `number_liked` INT NOT NULL DEFAULT 0,
  `number_disliked` INT NOT NULL DEFAULT 0,
  `status` ENUM('public', 'private', 'hidden') NULL,
  `tag_id` INT NOT NULL,
  `channel_id` INT NOT NULL,
  `channel_user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `channel_id`, `channel_user_id`),
  INDEX `fk_video_tag1_idx` (`tag_id` ASC) VISIBLE,
  INDEX `fk_video_channel1_idx` (`channel_id` ASC, `channel_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_video_tag1`
    FOREIGN KEY (`tag_id`)
    REFERENCES `proto_youtube`.`tag` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_channel1`
    FOREIGN KEY (`channel_id` , `channel_user_id`)
    REFERENCES `proto_youtube`.`channel` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`publishing_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`publishing_data` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `published_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `video_id`),
  INDEX `fk_publishing_data_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_publishing_data_video1_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_publishing_data_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_publishing_data_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `proto_youtube`.`video` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`subscribe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`subscribe` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_subscribed` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `channel_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `channel_id`, `user_id`),
  INDEX `fk_subscribe_channel1_idx` (`channel_id` ASC) VISIBLE,
  INDEX `fk_subscribe_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscribe_channel1`
    FOREIGN KEY (`channel_id`)
    REFERENCES `proto_youtube`.`channel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscribe_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` MEDIUMTEXT NULL,
  `date_comment` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `user_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `video_id`),
  INDEX `fk_comment_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_comment_video1_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `proto_youtube`.`video` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`like_dislike`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`like_dislike` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_liked_disliked` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `like_or_dislike` SET('like', 'dislike') NOT NULL,
  `like_dislikecol` VARCHAR(45) NULL,
  `comment_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`id`, `comment_id`, `user_id`, `video_id`),
  INDEX `fk_like_dislike_comment1_idx` (`comment_id` ASC) VISIBLE,
  INDEX `fk_like_dislike_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_like_dislike_video1_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_like_dislike_comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `proto_youtube`.`comment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_dislike_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_dislike_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `proto_youtube`.`video` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `proto_youtube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proto_youtube`.`playlist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `date_created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` SET('public', 'private') NOT NULL,
  `user_id` INT NOT NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `video_id`),
  INDEX `fk_playlist_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_playlist_video1_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `proto_youtube`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `proto_youtube`.`video` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
