-- MySQL Script generated by MySQL Workbench
-- Tue Jul 18 10:06:56 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema protofy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema protofy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `protofy` DEFAULT CHARACTER SET utf8 ;
USE `protofy` ;

-- -----------------------------------------------------
-- Table `protofy`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `username` VARCHAR(20) NOT NULL,
  `date_of_birth` DATE NOT NULL,
  `sex` SET('m', 'f') NULL,
  `country` VARCHAR(45) NOT NULL,
  `postal_code` VARCHAR(12) NOT NULL,
  `type_user` SET('free', 'premium') NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `protofy`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`subscription` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_subscription` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `date_renewal` DATETIME NOT NULL,
  `payment_method` SET('credit card', 'paypal') NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_subscription_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_subscription_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `protofy`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`payment_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`payment_details` (
  `id` INT NOT NULL,
  `date_payment` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `total` DECIMAL NOT NULL DEFAULT 0,
  `payment_method` SET('credit card', 'paypal') NOT NULL,
  `subscription_id` INT NOT NULL,
  PRIMARY KEY (`id`, `subscription_id`),
  UNIQUE INDEX `order_id_UNIQUE` (`order_id` ASC) VISIBLE,
  INDEX `fk_payment_details_subscription1_idx` (`subscription_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_details_subscription1`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `protofy`.`subscription` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`credit_card_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`credit_card_details` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `card_number` INT NOT NULL,
  `month_expiration` DATE NOT NULL,
  `year_expiration` DATE NOT NULL,
  `security_code` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_credit_card_details_payment_details1`
    FOREIGN KEY (`id`)
    REFERENCES `protofy`.`payment_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`paypal_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`paypal_details` (
  `id` INT NOT NULL,
  `username` VARCHAR(50) NOT NULL,
  `payment_details_id` INT NOT NULL,
  PRIMARY KEY (`id`, `payment_details_id`),
  INDEX `fk_paypal_details_payment_details1_idx` (`payment_details_id` ASC) VISIBLE,
  CONSTRAINT `fk_paypal_details_payment_details1`
    FOREIGN KEY (`payment_details_id`)
    REFERENCES `protofy`.`payment_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`artist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_first` VARCHAR(50) NOT NULL,
  `image` TINYBLOB NULL,
  `artist_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_artist_artist1_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_artist_artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `protofy`.`artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`album` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `date_published` DATETIME NOT NULL,
  `image` TINYBLOB NULL,
  `artist_id` INT NOT NULL,
  PRIMARY KEY (`id`, `artist_id`),
  INDEX `fk_album_artist1_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_album_artist1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `protofy`.`artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`song` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `duration` TIME NOT NULL,
  `number_played` INT NULL DEFAULT 0,
  `album_id` INT NOT NULL,
  `album_artist_id` INT NOT NULL,
  PRIMARY KEY (`id`, `album_id`, `album_artist_id`),
  INDEX `fk_song_album1_idx` (`album_id` ASC, `album_artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_song_album1`
    FOREIGN KEY (`album_id` , `album_artist_id`)
    REFERENCES `protofy`.`album` (`id` , `artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`playlist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NULL,
  `number_of_songs` INT NULL,
  `date_creation` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` SET('active', 'deleted') NOT NULL,
  `user_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  `song_album_id` INT NOT NULL,
  `song_album_artist_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `song_id`, `song_album_id`, `song_album_artist_id`),
  INDEX `fk_playlist_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_playlist_song1_idx` (`song_id` ASC, `song_album_id` ASC, `song_album_artist_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `protofy`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_playlist_song1`
    FOREIGN KEY (`song_id` , `song_album_id` , `song_album_artist_id`)
    REFERENCES `protofy`.`song` (`id` , `album_id` , `album_artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`playlist_deleted`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`playlist_deleted` (
  `id` INT NOT NULL,
  `date_deleted` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `playlist_id` INT NOT NULL,
  `playlist_user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlist_deleted_playlist1_idx` (`playlist_id` ASC, `playlist_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_deleted_playlist1`
    FOREIGN KEY (`playlist_id` , `playlist_user_id`)
    REFERENCES `protofy`.`playlist` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`playlist_shared`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`playlist_shared` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_updated` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `playlist_id` INT NOT NULL,
  `playlist_user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_playlist_shared_playlist1_idx` (`playlist_id` ASC, `playlist_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_shared_playlist1`
    FOREIGN KEY (`playlist_id` , `playlist_user_id`)
    REFERENCES `protofy`.`playlist` (`id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `protofy`.`user_has_favourites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `protofy`.`user_has_favourites` (
  `album_id` INT NOT NULL,
  `album_artist_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `song_id` INT NOT NULL,
  PRIMARY KEY (`album_id`, `album_artist_id`, `user_id`, `song_id`),
  INDEX `fk_album_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_album_has_user_album1_idx` (`album_id` ASC, `album_artist_id` ASC) VISIBLE,
  INDEX `fk_user_has_favourites_song1_idx` (`song_id` ASC) VISIBLE,
  CONSTRAINT `fk_album_has_user_album1`
    FOREIGN KEY (`album_id` , `album_artist_id`)
    REFERENCES `protofy`.`album` (`id` , `artist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_album_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `protofy`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_favourites_song1`
    FOREIGN KEY (`song_id`)
    REFERENCES `protofy`.`song` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
